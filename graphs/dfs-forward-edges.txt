/**
 * Dato un grafo orientato G = (V, E) ed un intero K appartenente R+ si scriva un algoritmo in pseudocodice
 * che restituisca la lista degli archi in avanti del grafo
 */

time = 0
forward_edges = []

dfs(graph, K):

    for node in graph.nodes:
        node.predecessor = null
        node.distance = 0
        node.end_visit = 0
        node.color = white

    for node in graph.nodes:
        if node.color == white:
            forward_edges = dfs_visit(node, K)

dfs_visit(node, K):
    node.color = white
    time += 1
    node.distance = time

    for adj_node in node.adj:
        if adj_node.color == white:
            adj_node.predecessor = node
            dfs_visit(adj_node, K)
        else if adj_node == black and node.distance < adj_node.distance:
            forward_edges.push((node, adj_node))    // push edge into list
        
    time += 1
    node.end_visit = time    
    node.color = black